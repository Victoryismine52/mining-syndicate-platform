import { CreateTaskInput } from "../../shared/schema";
export type { TaskRepo } from "../../shared/taskRepo";

export function downloadText(filename: string, content: string) {
  const blob = new Blob([content], { type: "text/plain;charset=utf-8" });
  const a = document.createElement("a");
  a.href = URL.createObjectURL(blob);
  a.download = filename;
  a.click();
  URL.revokeObjectURL(a.href);
}

export function genTaskConfigTS(constName: string, task: CreateTaskInput) {
  return `// Auto-generated by Builder Lab
import { CreateTaskInput } from "../shared/schema";

export const ${constName}: CreateTaskInput = ${JSON.stringify(task, null, 2)} as const;
`;
}

export function genExpressStub(route: string) {
  return `// Auto-generated minimal Express route stub
import { Router } from "express";
import type { TaskRepo } from "./taskRepo";

export default function makeRoute(repo: TaskRepo) {
  const r = Router();

  r.post("${route}", async (req, res) => {
    try {
      // const input = req.body; validate if needed
      const result = await repo.create(req.body);
      res.status(201).json({ ok: true, result });
    } catch (e) {
      console.error(e);
      res.status(500).json({ error: "failed" });
    }
  });

  return r;
}
`;
}

export function genSnowflakeCallProc(procName: string, params: string[]) {
  return `-- Auto-generated Snowflake call example
call ${'${procName}'}(${params.map(() => "?").join(", ")});
-- bind: ${'${params.join(", ")}'}
`;
}
